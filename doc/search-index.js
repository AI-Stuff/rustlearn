var searchIndex = {};
searchIndex["rustlearn"] = {"doc":"A machine learning crate for Rust.","items":[[0,"array","rustlearn","Basic matrix-like datastructures.",null,null],[0,"dense","rustlearn::array","Basic two-dimensional dense matrix type.",null,null],[3,"Array","rustlearn::array::dense","Basic two-dimensional dense matrix type.",null,null],[3,"ArrayView","","A view into a row or column of an existing dense matrix.",null,null],[3,"ArrayIterator","","Iterator over row or column views of a dense matrix.",null,null],[3,"ArrayViewIterator","","Iterator over entries of a dense matrix view.",null,null],[3,"ArrayViewNonzeroIterator","","Iterator over nonzero entries of a dense matrix view.",null,null],[5,"allclose","","Determines whether two arrays are sufficiently close to each other.",null,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"bool"}}],[5,"close","","Determines whether two floats are sufficiently close to each other.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"bool"}}],[11,"decode","","",0,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"next","","",2,null],[11,"next","","",3,null],[11,"next","","",4,null],[11,"iter","","Iterate over elements of the `ArrayView`.",1,null],[11,"iter_nonzero","","",1,null],[11,"rows","","",0,null],[11,"cols","","",0,null],[11,"get_unchecked","","",0,null],[11,"get_unchecked_mut","","",0,null],[11,"zeros","","Create a `rows` by `cols` array of zeros.",0,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"array"}}],[11,"ones","","Create a `rows` by `cols` array of ones.",0,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"array"}}],[11,"reshape","","Change the shape of the array to `rows` by `cols`.",0,null],[11,"order","","Return the order (row-major or column-major)\nof the array.",0,null],[11,"data","","Return an immutable reference to the underlying\ndata buffer of the array.",0,null],[11,"as_slice","","Return an immutable reference to the underlying\ndata buffer of the array.",0,null],[11,"as_mut_slice","","Return an mutable reference to the underlying\ndata buffer of the array.",0,null],[11,"T","","Transpose the matrix.",0,null],[11,"sum","","Compute the sum of the entries of the array.",0,null],[11,"mean","","Compute the mean of the array.",0,null],[11,"from","","Construct an array from a vector.",0,{"inputs":[{"name":"vec"}],"output":{"name":"array"}}],[11,"from","","Construct an array from a vector of vectors.",0,{"inputs":[{"name":"vec"}],"output":{"name":"array"}}],[11,"add","","",0,null],[11,"add_inplace","","",0,null],[11,"sub","","",0,null],[11,"sub_inplace","","",0,null],[11,"times","","",0,null],[11,"times_inplace","","",0,null],[11,"div","","",0,null],[11,"div_inplace","","",0,null],[11,"add","","",0,null],[11,"add_inplace","","",0,null],[11,"sub","","",0,null],[11,"sub_inplace","","",0,null],[11,"times","","",0,null],[11,"times_inplace","","",0,null],[11,"div","","",0,null],[11,"div_inplace","","",0,null],[11,"dot","","",0,null],[11,"get_rows","","",0,null],[0,"sparse","rustlearn::array","Sparse matrices.",null,null],[3,"SparseRowArray","rustlearn::array::sparse","A sparse matrix with entries arranged row-wise.",null,null],[3,"SparseColumnArray","","A sparse matrix with entries arranged column-wise.",null,null],[3,"SparseArrayView","","A view into a row or a column of an existing sparse matrix.",null,null],[3,"SparseArrayViewIterator","","Iterator over nonzero entries of a `SparseArrayView`.",null,null],[3,"SparseArrayIterator","","Iterator over row or column views of a sparse matrix.",null,null],[11,"decode","","",5,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,null],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"rows","","",5,null],[11,"cols","","",5,null],[11,"get_unchecked","","",5,null],[11,"get_unchecked_mut","","",5,null],[11,"set_unchecked","","",5,null],[11,"rows","","",6,null],[11,"cols","","",6,null],[11,"get_unchecked","","",6,null],[11,"get_unchecked_mut","","",6,null],[11,"set_unchecked","","",6,null],[11,"zeros","","Initialise an empty (`rows` by `cols`) matrix.",5,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"sparserowarray"}}],[11,"nnz","","Return the number of nonzero entries.",5,null],[11,"todense","","",5,null],[11,"from","","",5,{"inputs":[{"name":"array"}],"output":{"name":"sparserowarray"}}],[11,"from","","",5,{"inputs":[{"name":"sparsecolumnarray"}],"output":{"name":"sparserowarray"}}],[11,"zeros","","Initialise an empty (`rows` by `cols`) matrix.",6,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"sparsecolumnarray"}}],[11,"nnz","","Return the number of nonzero entries.",6,null],[11,"todense","","",6,null],[11,"from","","",6,{"inputs":[{"name":"array"}],"output":{"name":"sparsecolumnarray"}}],[11,"from","","",6,{"inputs":[{"name":"sparserowarray"}],"output":{"name":"sparsecolumnarray"}}],[11,"iter_nonzero","","",7,null],[11,"indices","","Returns a reference to indices of nonzero entries of the view.",7,null],[11,"data","","Returns a reference to values of nonzero entries of the view.",7,null],[11,"nnz","","Returns the count of  nonzero entries of the view.",7,null],[11,"next","","",8,null],[11,"next","","",9,null],[11,"get_rows","","",5,null],[0,"traits","rustlearn::array","Basic traits applying to all types of matrices.",null,null],[4,"MatrixOrder","rustlearn::array::traits","",null,null],[13,"RowMajor","","",10,null],[13,"ColumnMajor","","",10,null],[8,"IndexableMatrix","","Trait representing a shaped matrix whose entries can be accessed\nat will using their row and column position.",null,null],[10,"rows","","Return the number of rows of the matrix.",11,null],[10,"cols","","Return the number of columns of the matrix.",11,null],[10,"get_unchecked","","Get the value of the entry at (`row`, `column`) without bounds checking.",11,null],[10,"get_unchecked_mut","","Get a mutable reference to the value of the entry at (`row`, `column`)\nwithout bounds checking.",11,null],[11,"get","","Get the value of the entry at (`row`, `column`).",11,null],[11,"get_mut","","Get a mutable reference to value of the entry at (`row`, `column`).",11,null],[11,"set","","Set the value of the entry at (`row`, `column`) to `value`.",11,null],[11,"set_unchecked","","Set the value of the entry at (`row`, `column`) to `value` without bounds checking.",11,null],[8,"RowIterable","","Trait representing a matrix that can be iterated over in\na row-wise fashion.",null,null],[16,"Item","","",12,null],[16,"Output","","",12,null],[10,"iter_rows","","Iterate over rows of the matrix.",12,null],[10,"iter_rows_range","","Iterate over a subset of rows of the matrix.",12,null],[10,"view_row","","View a row of the matrix.",12,null],[8,"ColumnIterable","","Trait representing a matrix that can be iterated over in\na column-wise fashion.",null,null],[16,"Item","","",13,null],[16,"Output","","",13,null],[10,"iter_columns","","Iterate over columns of a the matrix.",13,null],[10,"iter_columns_range","","Iterate over a subset of columns of the matrix.",13,null],[10,"view_column","","View a column of the matrix.",13,null],[8,"NonzeroIterable","","Trait representing an object whose non-zero\nentries can be iterated over.",null,null],[16,"Output","","",14,null],[10,"iter_nonzero","","",14,null],[8,"RowIndex","","Trait representing a matrix whose rows can be selected\nto create a new matrix containing those rows.",null,null],[16,"Output","","",15,null],[10,"get_rows","","",15,null],[8,"ElementwiseArrayOps","","Elementwise array operations trait.",null,null],[16,"Output","","",16,null],[10,"add","","",16,null],[10,"add_inplace","","",16,null],[10,"sub","","",16,null],[10,"sub_inplace","","",16,null],[10,"times","","",16,null],[10,"times_inplace","","",16,null],[10,"div","","",16,null],[10,"div_inplace","","",16,null],[8,"Dot","","A matrix multiplication trait.",null,null],[16,"Output","","",17,null],[10,"dot","","",17,null],[11,"decode","","",10,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[0,"prelude","rustlearn::array","Prelude containing basic matrix-like structures and traits.",null,null],[0,"cross_validation","rustlearn","Cross validation utilities.",null,null],[0,"cross_validation","rustlearn::cross_validation","K-fold cross validation.",null,null],[3,"CrossValidation","rustlearn::cross_validation::cross_validation","",null,null],[11,"new","","Create a new instance of the cross validation utility.",18,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"crossvalidation"}}],[11,"set_rng","","Fix the random number generator.",18,null],[11,"next","","",18,null],[0,"shuffle_split","rustlearn::cross_validation","Validation via repeated random shuffling\nof the data and splitting into a training and test set.",null,null],[3,"ShuffleSplit","rustlearn::cross_validation::shuffle_split","",null,null],[11,"new","","Create a new instance of the shuffle split utility.",19,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f32"}],"output":{"name":"shufflesplit"}}],[11,"set_rng","","Set the random number generator.",19,null],[11,"next","","",19,null],[0,"datasets","rustlearn","Datasets and dataset loading utilities.",null,null],[0,"iris","rustlearn::datasets","The iris dataset.",null,null],[5,"load_data","rustlearn::datasets::iris","Load the iris dataset, returning a tuple of (features, class labels).",null,null],[0,"ensemble","rustlearn","Ensemble models.",null,null],[0,"random_forest","rustlearn::ensemble","Random forests.",null,null],[3,"Hyperparameters","rustlearn::ensemble::random_forest","",null,null],[3,"RandomForest","","",null,null],[11,"decode","","",20,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",20,null],[11,"new","","Create a new instance of Hyperparameters, using the Hyperparameters\nfor a `DecisionTree` and the number of trees to build.",20,{"inputs":[{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"rng","","Set the random number generator.",20,null],[11,"build","","Build the random forest model.",20,null],[11,"one_vs_rest","","Build a one-vs-rest multiclass random forest.",20,null],[11,"clone","","",21,null],[11,"decode","","",21,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",21,null],[11,"fit","","",21,null],[11,"decision_function","","",21,null],[11,"fit","","",21,null],[11,"decision_function","","",21,null],[11,"trees","","Return a reference to the consituent trees vector.",21,null],[0,"linear_models","rustlearn","Linear models.",null,null],[0,"sgdclassifier","rustlearn::linear_models","A two-class logistic regression classifier implemented using stochastic gradient descent.",null,null],[3,"Hyperparameters","rustlearn::linear_models::sgdclassifier","Hyperparameters for a `SGDClassifier` model.",null,null],[3,"SGDClassifier","","A two-class linear regression classifier implemented using stochastic gradient descent.",null,null],[11,"decode","","",22,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",22,null],[11,"new","","Creates new Hyperparameters.",22,{"inputs":[{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"learning_rate","","Set the initial learning rate.",22,null],[11,"l2_penalty","","Set the L2 penalty.",22,null],[11,"l1_penalty","","Set the L1 penalty.",22,null],[11,"build","","Build a two-class model.",22,null],[11,"one_vs_rest","","Build a one-vs-rest multiclass model.",22,null],[11,"decode","","",23,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",23,null],[11,"clone","","",23,null],[11,"fit","","",23,null],[11,"decision_function","","",23,null],[11,"decision_function_parallel","","",23,null],[11,"fit","","",23,null],[11,"decision_function","","",23,null],[11,"get_coefficients","","Returns a reference to the estimated coefficients vector.",23,null],[0,"metrics","rustlearn","Accuracy metrics.",null,null],[5,"roc_auc_score","rustlearn::metrics","Compute the ROC AUC score for a binary classification problem.",null,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[5,"accuracy_score","","Measure classifier accuracy",null,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"f32"}}],[0,"multiclass","rustlearn","Utilities for mutliclass classifiers.",null,null],[3,"OneVsRest","rustlearn::multiclass","",null,null],[3,"OneVsRestWrapper","","Wraps simple two-class classifiers to implement one-vs-rest strategies.",null,null],[11,"split","","",24,{"inputs":[{"name":"array"}],"output":{"name":"onevsrest"}}],[11,"merge","","",24,null],[11,"next","","",24,null],[11,"decode","","",25,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",25,null],[11,"new","","",25,{"inputs":[{"name":"t"}],"output":{"name":"onevsrestwrapper"}}],[11,"models","","",25,null],[11,"class_labels","","",25,null],[11,"fit","","",25,null],[11,"decision_function","","",25,null],[11,"predict","","",25,null],[11,"fit","","",25,null],[11,"decision_function","","",25,null],[11,"predict","","",25,null],[11,"fit","","",25,null],[11,"decision_function","","",25,null],[11,"predict","","",25,null],[11,"decision_function_parallel","","",25,null],[11,"predict_parallel","","",25,null],[11,"decision_function_parallel","","",25,null],[11,"predict_parallel","","",25,null],[11,"decision_function_parallel","","",25,null],[11,"predict_parallel","","",25,null],[11,"fit_parallel","","",25,null],[11,"fit_parallel","","",25,null],[11,"fit_parallel","","",25,null],[0,"feature_extraction","rustlearn","Feature extraction utilities.",null,null],[0,"dict_vectorizer","rustlearn::feature_extraction","`DictVectorizer` vectorizers a set of named features into a sparse array\nvia one-hot encoding.",null,null],[3,"DictVectorizer","rustlearn::feature_extraction::dict_vectorizer","",null,null],[11,"default","","",26,{"inputs":[],"output":{"name":"dictvectorizer"}}],[11,"decode","","",26,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",26,null],[11,"new","","Create a new `DictVectorizer`.",26,{"inputs":[],"output":{"name":"dictvectorizer"}}],[11,"partial_fit","","Set the feature value of a named feature in a given row.",26,null],[11,"transform","","Transform the accumulated data into a sparse array.",26,null],[11,"dictionary","","Return a reference to the feature dictionary, mapping\nfeature names to their (column index, occurrence count).",26,null],[0,"factorization","rustlearn","Factorization models.",null,null],[0,"factorization_machines","rustlearn::factorization","A factorization machine model implemented using stochastic gradient descent.",null,null],[3,"Hyperparameters","rustlearn::factorization::factorization_machines","Hyperparameters for a FactorizationMachine",null,null],[3,"FactorizationMachine","","A two-class factorization machine implemented using stochastic gradient descent.",null,null],[11,"decode","","",27,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",27,null],[11,"new","","Creates new Hyperparameters.",27,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"learning_rate","","Set the initial learning rate.",27,null],[11,"l2_penalty","","Set the L2 penalty.",27,null],[11,"l1_penalty","","Set the L1 penalty.",27,null],[11,"rng","","",27,null],[11,"build","","Build a two-class model.",27,null],[11,"one_vs_rest","","Build a one-vs-rest multiclass model.",27,null],[11,"decode","","",28,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",28,null],[11,"clone","","",28,null],[11,"get_coefficients","","",28,null],[11,"get_latent_factors","","",28,null],[11,"fit","","",28,null],[11,"decision_function","","",28,null],[11,"fit_parallel","","",28,null],[0,"trees","rustlearn","Decision trees.",null,null],[0,"decision_tree","rustlearn::trees","A two-class decision tree classifer.",null,null],[3,"Hyperparameters","rustlearn::trees::decision_tree","Hyperparameters for a `DecisionTree` model.",null,null],[3,"DecisionTree","","A two-class decision tree.",null,null],[11,"decode","","",29,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",29,null],[11,"clone","","",29,null],[11,"new","","Creates new Hyperparameters",29,{"inputs":[{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"max_features","","Set the maximum number of features to be considered when\nfinding the best split for the decision tree.",29,null],[11,"min_samples_split","","Set the minimum number of samples that must be present\nin order for further splitting to take place.",29,null],[11,"max_depth","","Set the maximum depth of the tree.",29,null],[11,"rng","","Set the random number generator used for sampling features\nto consider at each split.",29,null],[11,"build","","Build a binary decision tree model.",29,null],[11,"one_vs_rest","","Build a one-vs-rest multi-class decision tree model.",29,null],[11,"decode","","",30,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",30,null],[11,"clone","","",30,null],[11,"fit","","",30,null],[11,"decision_function","","",30,null],[11,"fit","","",30,null],[11,"decision_function","","",30,null],[0,"traits","rustlearn","Common rustlearn traits.",null,null],[8,"SupervisedModel","rustlearn::traits","Trait describing supervised models.",null,null],[10,"fit","","",31,null],[10,"decision_function","","",31,null],[11,"predict","","",31,null],[8,"ParallelPredict","","Applies to models capable of making predictions in a parallel fashion.",null,null],[10,"decision_function_parallel","","",32,null],[11,"predict_parallel","","",32,null],[8,"ParallelSupervisedModel","","Applies to models capable of being trained in a parallel fashion.",null,null],[10,"fit_parallel","","",33,null],[0,"svm","rustlearn","Support vector machines.",null,null],[0,"libsvm","rustlearn::svm","Models provided by the `libsvm` library.",null,null],[0,"svc","rustlearn::svm::libsvm","Support Vector Classifier using the `libsvm` library.",null,null],[3,"Hyperparameters","rustlearn::svm::libsvm::svc","Hyperparameters for the SVC model.",null,null],[3,"SVC","","Support Vector Classifier provided by the `libsvm` library.",null,null],[4,"KernelType","","Type of the kernel used by the SVM.",null,null],[13,"Linear","","",34,null],[13,"Polynomial","","",34,null],[13,"RBF","","",34,null],[13,"Sigmoid","","",34,null],[13,"Precomputed","","Not implemented.",34,null],[11,"clone","","",35,null],[11,"decode","","",35,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",35,null],[11,"new","","",35,{"inputs":[{"name":"usize"},{"name":"kerneltype"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"C","","Set the regularization parameter `C`; smaller values\nmean more regularization.\nDefault is `1.0`.",35,null],[11,"degree","","Set the degree of the polynomial kernel. No effect on other\nkernels. Default: 3.",35,null],[11,"gamma","","Set the gamma parameter of the RBF kernel.\nDefault is `1 / self.dim`.",35,null],[11,"coef0","","Set the coef0 parameter for the sigmoid kernel.\nDefault is `0.0`.",35,null],[11,"cache_size","","Set the `libsvm` cache size, in megabytes.\nDefault is `100.0`.",35,null],[11,"build","","Build the SVC model. `libsvm` natively supports multiclass\nproblems via one-vs-one (OvO) estimation, so no one-vs-rest\nwrapper is provided.",35,null],[11,"clone","","",36,null],[11,"decode","","",36,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",36,null],[11,"fit","","",36,null],[11,"decision_function","","",36,null],[11,"predict","","",36,null],[11,"fit","","",36,null],[11,"decision_function","","",36,null],[11,"predict","","",36,null],[0,"utils","rustlearn","Internal utils.",null,null],[3,"EncodableRng","rustlearn::utils","Wrapper for making random number generators serializable.\nDoes no actual encoding, and merely creates a new\ngenerator on decoding.",null,null],[12,"rng","","",37,null],[5,"check_valid_labels","","Check that the input array contains valid binary classification labels.",null,{"inputs":[{"name":"array"}],"output":{"name":"result"}}],[5,"check_data_dimensionality","","Check compatibility of the model dimensions and the number of columns in X.",null,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"result"}}],[5,"check_matched_dimensions","","",null,{"inputs":[{"name":"t"},{"name":"array"}],"output":{"name":"result"}}],[11,"clone","","",37,null],[11,"new","","",37,{"inputs":[],"output":{"name":"encodablerng"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"encode","","",37,null],[11,"decode","","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"prelude","rustlearn","Basic data structures and traits used throughout `rustlearn`.",null,null],[11,"fmt","rustlearn::svm::libsvm::svc","",34,null],[11,"clone","","",34,null],[11,"decode","","",34,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",34,null]],"paths":[[3,"Array"],[3,"ArrayView"],[3,"ArrayIterator"],[3,"ArrayViewIterator"],[3,"ArrayViewNonzeroIterator"],[3,"SparseRowArray"],[3,"SparseColumnArray"],[3,"SparseArrayView"],[3,"SparseArrayViewIterator"],[3,"SparseArrayIterator"],[4,"MatrixOrder"],[8,"IndexableMatrix"],[8,"RowIterable"],[8,"ColumnIterable"],[8,"NonzeroIterable"],[8,"RowIndex"],[8,"ElementwiseArrayOps"],[8,"Dot"],[3,"CrossValidation"],[3,"ShuffleSplit"],[3,"Hyperparameters"],[3,"RandomForest"],[3,"Hyperparameters"],[3,"SGDClassifier"],[3,"OneVsRest"],[3,"OneVsRestWrapper"],[3,"DictVectorizer"],[3,"Hyperparameters"],[3,"FactorizationMachine"],[3,"Hyperparameters"],[3,"DecisionTree"],[8,"SupervisedModel"],[8,"ParallelPredict"],[8,"ParallelSupervisedModel"],[4,"KernelType"],[3,"Hyperparameters"],[3,"SVC"],[3,"EncodableRng"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::mem::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,null],[11,"store","","Do an atomic store with the given memory ordering.",0,null],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",0,null],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,null],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",0,null],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",0,null],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",0,null],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,null],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,null],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",1,null],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,null],[11,"drop","","",1,null],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"deref","","",3,null],[11,"as_raw","","",3,null],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc&lt;T&gt;`.",null,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,null],[11,"swap","","",5,null],[11,"take","","",5,null],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads\nblocked on `pop`.",6,null],[11,"is_empty","","Check if this queue is empty.",6,null],[11,"try_pop","","Attempt to dequeue from the front.",6,null],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is\nempty.",6,null],[11,"new","","Create a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,null],[11,"pop","","Attempt to pop the top element of the stack.",7,null],[11,"is_empty","","Check if this queue is empty.",7,null],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,null],[11,"try_pop","","Attempt to dequeue from the front.",8,null],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to\none side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the\nopposite end of the deque from the worker, and they only have access to the\n`steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",9,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more\ndata.",9,null],[13,"Data","","The stealer has successfully stolen some data.",9,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"push","","Pushes data onto the front of this work queue.",10,null],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty\nqueue.",10,null],[11,"steal","","Steals work off the end of the queue (opposite of the worker&#39;s end)",11,null],[11,"clone","","",11,null],[11,"drop","crossbeam::sync","",12,null],[11,"new","","Creates a new `ArcCell`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous\nvalue.",12,null],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",12,null],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",13,null],[11,"spawn","","Create a scoped thread.",13,null],[11,"join","","Join the scoped thread, returning the result it produced.",14,null],[11,"thread","","Get the underlying thread handle.",14,null],[11,"drop","","",13,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",25,null],[10,"read_nil","","",25,null],[10,"read_usize","","",25,null],[10,"read_u64","","",25,null],[10,"read_u32","","",25,null],[10,"read_u16","","",25,null],[10,"read_u8","","",25,null],[10,"read_isize","","",25,null],[10,"read_i64","","",25,null],[10,"read_i32","","",25,null],[10,"read_i16","","",25,null],[10,"read_i8","","",25,null],[10,"read_bool","","",25,null],[10,"read_f64","","",25,null],[10,"read_f32","","",25,null],[10,"read_char","","",25,null],[10,"read_str","","",25,null],[10,"read_enum","","",25,null],[10,"read_enum_variant","","",25,null],[10,"read_enum_variant_arg","","",25,null],[10,"read_enum_struct_variant","","",25,null],[10,"read_enum_struct_variant_field","","",25,null],[10,"read_struct","","",25,null],[10,"read_struct_field","","",25,null],[10,"read_tuple","","",25,null],[10,"read_tuple_arg","","",25,null],[10,"read_tuple_struct","","",25,null],[10,"read_tuple_struct_arg","","",25,null],[10,"read_option","","",25,null],[10,"read_seq","","",25,null],[10,"read_seq_elt","","",25,null],[10,"read_map","","",25,null],[10,"read_map_elt_key","","",25,null],[10,"read_map_elt_val","","",25,null],[10,"error","","",25,null],[8,"Encoder","","",null,null],[16,"Error","","",26,null],[10,"emit_nil","","",26,null],[10,"emit_usize","","",26,null],[10,"emit_u64","","",26,null],[10,"emit_u32","","",26,null],[10,"emit_u16","","",26,null],[10,"emit_u8","","",26,null],[10,"emit_isize","","",26,null],[10,"emit_i64","","",26,null],[10,"emit_i32","","",26,null],[10,"emit_i16","","",26,null],[10,"emit_i8","","",26,null],[10,"emit_bool","","",26,null],[10,"emit_f64","","",26,null],[10,"emit_f32","","",26,null],[10,"emit_char","","",26,null],[10,"emit_str","","",26,null],[10,"emit_enum","","",26,null],[10,"emit_enum_variant","","",26,null],[10,"emit_enum_variant_arg","","",26,null],[10,"emit_enum_struct_variant","","",26,null],[10,"emit_enum_struct_variant_field","","",26,null],[10,"emit_struct","","",26,null],[10,"emit_struct_field","","",26,null],[10,"emit_tuple","","",26,null],[10,"emit_tuple_arg","","",26,null],[10,"emit_tuple_struct","","",26,null],[10,"emit_tuple_struct_arg","","",26,null],[10,"emit_option","","",26,null],[10,"emit_option_none","","",26,null],[10,"emit_option_some","","",26,null],[10,"emit_seq","","",26,null],[10,"emit_seq_elt","","",26,null],[10,"emit_map","","",26,null],[10,"emit_map_elt_key","","",26,null],[10,"emit_map_elt_val","","",26,null],[8,"Decodable","","",null,null],[10,"decode","","",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",28,null],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",29,null],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["advapi32"] = {"doc":"FFI bindings to advapi32.","items":[],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",9,null],[12,"dli_fbase","","",9,null],[12,"dli_sname","","",9,null],[12,"dli_saddr","","",9,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",10,null],[12,"sa_data","","",10,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",11,null],[12,"sin_port","","",11,null],[12,"sin_addr","","",11,null],[12,"sin_zero","","",11,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",12,null],[12,"sin6_port","","",12,null],[12,"sin6_flowinfo","","",12,null],[12,"sin6_addr","","",12,null],[12,"sin6_scope_id","","",12,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",13,null],[12,"sun_path","","",13,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",14,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",15,null],[12,"ai_family","","",15,null],[12,"ai_socktype","","",15,null],[12,"ai_protocol","","",15,null],[12,"ai_addrlen","","",15,null],[12,"ai_addr","","",15,null],[12,"ai_canonname","","",15,null],[12,"ai_next","","",15,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",16,null],[12,"sll_protocol","","",16,null],[12,"sll_ifindex","","",16,null],[12,"sll_hatype","","",16,null],[12,"sll_pkttype","","",16,null],[12,"sll_halen","","",16,null],[12,"sll_addr","","",16,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",17,null],[12,"tm_min","","",17,null],[12,"tm_hour","","",17,null],[12,"tm_mday","","",17,null],[12,"tm_mon","","",17,null],[12,"tm_year","","",17,null],[12,"tm_wday","","",17,null],[12,"tm_yday","","",17,null],[12,"tm_isdst","","",17,null],[12,"tm_gmtoff","","",17,null],[12,"tm_zone","","",17,null],[3,"dirent","","",null,null],[12,"d_ino","","",18,null],[12,"d_off","","",18,null],[12,"d_reclen","","",18,null],[12,"d_type","","",18,null],[12,"d_name","","",18,null],[3,"dirent64","","",null,null],[12,"d_ino","","",19,null],[12,"d_off","","",19,null],[12,"d_reclen","","",19,null],[12,"d_type","","",19,null],[12,"d_name","","",19,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",20,null],[12,"rlim_max","","",20,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",21,null],[12,"gl_pathv","","",21,null],[12,"gl_offs","","",21,null],[12,"gl_flags","","",21,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",22,null],[12,"ifa_name","","",22,null],[12,"ifa_flags","","",22,null],[12,"ifa_addr","","",22,null],[12,"ifa_netmask","","",22,null],[12,"ifa_ifu","","",22,null],[12,"ifa_data","","",22,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",23,null],[12,"pw_passwd","","",23,null],[12,"pw_uid","","",23,null],[12,"pw_gid","","",23,null],[12,"pw_gecos","","",23,null],[12,"pw_dir","","",23,null],[12,"pw_shell","","",23,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",24,null],[12,"f_frsize","","",24,null],[12,"f_blocks","","",24,null],[12,"f_bfree","","",24,null],[12,"f_bavail","","",24,null],[12,"f_files","","",24,null],[12,"f_ffree","","",24,null],[12,"f_favail","","",24,null],[12,"f_fsid","","",24,null],[12,"f_flag","","",24,null],[12,"f_namemax","","",24,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",25,null],[12,"sa_mask","","",25,null],[12,"sa_flags","","",25,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",26,null],[12,"ss_flags","","",26,null],[12,"ss_size","","",26,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",27,null],[12,"si_errno","","",27,null],[12,"si_code","","",27,null],[12,"_pad","","",27,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",28,null],[12,"gl_pathv","","",28,null],[12,"gl_offs","","",28,null],[12,"gl_flags","","",28,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",29,null],[12,"st_ino","","",29,null],[12,"st_nlink","","",29,null],[12,"st_mode","","",29,null],[12,"st_uid","","",29,null],[12,"st_gid","","",29,null],[12,"st_rdev","","",29,null],[12,"st_size","","",29,null],[12,"st_blksize","","",29,null],[12,"st_blocks","","",29,null],[12,"st_atime","","",29,null],[12,"st_atime_nsec","","",29,null],[12,"st_mtime","","",29,null],[12,"st_mtime_nsec","","",29,null],[12,"st_ctime","","",29,null],[12,"st_ctime_nsec","","",29,null],[3,"stat64","","",null,null],[12,"st_dev","","",30,null],[12,"st_ino","","",30,null],[12,"st_nlink","","",30,null],[12,"st_mode","","",30,null],[12,"st_uid","","",30,null],[12,"st_gid","","",30,null],[12,"st_rdev","","",30,null],[12,"st_size","","",30,null],[12,"st_blksize","","",30,null],[12,"st_blocks","","",30,null],[12,"st_atime","","",30,null],[12,"st_atime_nsec","","",30,null],[12,"st_mtime","","",30,null],[12,"st_mtime_nsec","","",30,null],[12,"st_ctime","","",30,null],[12,"st_ctime_nsec","","",30,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"putenv","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"usleep","","",null,null],[5,"recvfrom","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"mkfifo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"posix_memalign","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"shm_open","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",37,null],[11,"clone","","",17,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"WNOHANG","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"Dl_info"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fd_set"]]};
searchIndex["winapi"] = {"doc":"Types and constants for WinAPI bindings.","items":[],"paths":[]};
searchIndex['rustlearn'] = {"items":[[0,"","rustlearn","A machine learning crate for Rust.",null,null],[0,"array","","Basic matrix-like datastructures.",null,null],[0,"dense","rustlearn::array","Basic two-dimensional dense matrix type.",null,null],[3,"Array","rustlearn::array::dense","Basic two-dimensional dense matrix type.",null,null],[3,"ArrayView","","A view into a row or column of an existing dense matrix.",null,null],[3,"ArrayIterator","","Iterator over row or column views of a dense matrix.",null,null],[3,"ArrayViewIterator","","Iterator over entries of a dense matrix view.",null,null],[3,"ArrayViewNonzeroIterator","","Iterator over nonzero entries of a dense matrix view.",null,null],[5,"allclose","","Determines whether two arrays are sufficiently close to each other.",null,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"bool"}}],[5,"close","","Determines whether two floats are sufficiently close to each other.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"bool"}}],[11,"decode","","",0,{"inputs":[{"name":"array"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"array"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"array"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"array"}],"output":{"name":"array"}}],[11,"fmt","","",1,{"inputs":[{"name":"arrayview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"arrayview"}],"output":{"name":"arrayview"}}],[11,"next","","",2,{"inputs":[{"name":"arrayiterator"}],"output":{"name":"option"}}],[11,"next","","",3,{"inputs":[{"name":"arrayviewiterator"}],"output":{"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"arrayviewnonzeroiterator"}],"output":{"name":"option"}}],[11,"iter","","Iterate over elements of the `ArrayView`.",1,{"inputs":[{"name":"arrayview"}],"output":{"name":"arrayviewiterator"}}],[11,"iter_nonzero","","",1,{"inputs":[{"name":"arrayview"}],"output":{"name":"arrayviewnonzeroiterator"}}],[11,"rows","","",0,{"inputs":[{"name":"array"}],"output":{"name":"usize"}}],[11,"cols","","",0,{"inputs":[{"name":"array"}],"output":{"name":"usize"}}],[11,"get_unchecked","","",0,{"inputs":[{"name":"array"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"get_unchecked_mut","","",0,{"inputs":[{"name":"array"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"zeros","","Create a `rows` by `cols` array of zeros.",0,{"inputs":[{"name":"array"},{"name":"usize"},{"name":"usize"}],"output":{"name":"array"}}],[11,"ones","","Create a `rows` by `cols` array of ones.",0,{"inputs":[{"name":"array"},{"name":"usize"},{"name":"usize"}],"output":{"name":"array"}}],[11,"reshape","","Change the shape of the array to `rows` by `cols`.",0,{"inputs":[{"name":"array"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"order","","Return the order (row-major or column-major)\nof the array.",0,{"inputs":[{"name":"array"}],"output":{"name":"matrixorder"}}],[11,"data","","Return an immutable reference to the underlying\ndata buffer of the array.",0,{"inputs":[{"name":"array"}],"output":{"name":"vec"}}],[11,"as_slice","","Return an immutable reference to the underlying\ndata buffer of the array.",0,null],[11,"as_mut_slice","","Return an mutable reference to the underlying\ndata buffer of the array.",0,null],[11,"T","","Transpose the matrix.",0,{"inputs":[{"name":"array"}],"output":{"name":"array"}}],[11,"sum","","Compute the sum of the entries of the array.",0,{"inputs":[{"name":"array"}],"output":{"name":"f32"}}],[11,"mean","","Compute the mean of the array.",0,{"inputs":[{"name":"array"}],"output":{"name":"f32"}}],[11,"from","","Construct an array from a vector.",0,{"inputs":[{"name":"array"},{"name":"vec"}],"output":{"name":"array"}}],[11,"from","","Construct an array from a vector of vectors.",0,{"inputs":[{"name":"array"},{"name":"vec"}],"output":{"name":"array"}}],[11,"add","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":{"name":"array"}}],[11,"add_inplace","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":null}],[11,"sub","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":{"name":"array"}}],[11,"sub_inplace","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":null}],[11,"times","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":{"name":"array"}}],[11,"times_inplace","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":null}],[11,"div","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":{"name":"array"}}],[11,"div_inplace","","",0,{"inputs":[{"name":"array"},{"name":"f32"}],"output":null}],[11,"add","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"array"}}],[11,"add_inplace","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":null}],[11,"sub","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"array"}}],[11,"sub_inplace","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":null}],[11,"times","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"array"}}],[11,"times_inplace","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":null}],[11,"div","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"array"}}],[11,"div_inplace","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":null}],[11,"dot","","",0,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"array"}}],[11,"get_rows","","",0,{"inputs":[{"name":"array"},{"name":"vec"}],"output":{"name":"array"}}],[0,"sparse","rustlearn::array","Sparse matrices.",null,null],[3,"SparseRowArray","rustlearn::array::sparse","A sparse matrix with entries arranged row-wise.",null,null],[3,"SparseColumnArray","","A sparse matrix with entries arranged column-wise.",null,null],[3,"SparseArrayView","","A view into a row or a column of an existing sparse matrix.",null,null],[3,"SparseArrayViewIterator","","Iterator over nonzero entries of a `SparseArrayView`.",null,null],[3,"SparseArrayIterator","","Iterator over row or column views of a sparse matrix.",null,null],[11,"decode","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"sparsearrayview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"sparsearrayview"}],"output":{"name":"sparsearrayview"}}],[11,"rows","","",5,{"inputs":[{"name":"sparserowarray"}],"output":{"name":"usize"}}],[11,"cols","","",5,{"inputs":[{"name":"sparserowarray"}],"output":{"name":"usize"}}],[11,"get_unchecked","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"get_unchecked_mut","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"set_unchecked","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"usize"},{"name":"usize"},{"name":"f32"}],"output":null}],[11,"rows","","",6,{"inputs":[{"name":"sparsecolumnarray"}],"output":{"name":"usize"}}],[11,"cols","","",6,{"inputs":[{"name":"sparsecolumnarray"}],"output":{"name":"usize"}}],[11,"get_unchecked","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"get_unchecked_mut","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"set_unchecked","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"usize"},{"name":"usize"},{"name":"f32"}],"output":null}],[11,"zeros","","Initialise an empty (`rows` by `cols`) matrix.",5,{"inputs":[{"name":"sparserowarray"},{"name":"usize"},{"name":"usize"}],"output":{"name":"sparserowarray"}}],[11,"nnz","","Return the number of nonzero entries.",5,{"inputs":[{"name":"sparserowarray"}],"output":{"name":"usize"}}],[11,"todense","","",5,{"inputs":[{"name":"sparserowarray"}],"output":{"name":"array"}}],[11,"from","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"array"}],"output":{"name":"sparserowarray"}}],[11,"from","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"sparsecolumnarray"}],"output":{"name":"sparserowarray"}}],[11,"zeros","","Initialise an empty (`rows` by `cols`) matrix.",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"usize"},{"name":"usize"}],"output":{"name":"sparsecolumnarray"}}],[11,"nnz","","Return the number of nonzero entries.",6,{"inputs":[{"name":"sparsecolumnarray"}],"output":{"name":"usize"}}],[11,"todense","","",6,{"inputs":[{"name":"sparsecolumnarray"}],"output":{"name":"array"}}],[11,"from","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"array"}],"output":{"name":"sparsecolumnarray"}}],[11,"from","","",6,{"inputs":[{"name":"sparsecolumnarray"},{"name":"sparserowarray"}],"output":{"name":"sparsecolumnarray"}}],[11,"iter_nonzero","","",7,{"inputs":[{"name":"sparsearrayview"}],"output":{"name":"sparsearrayviewiterator"}}],[11,"indices","","Returns a reference to indices of nonzero entries of the view.",7,null],[11,"data","","Returns a reference to values of nonzero entries of the view.",7,null],[11,"nnz","","Returns the count of  nonzero entries of the view.",7,{"inputs":[{"name":"sparsearrayview"}],"output":{"name":"usize"}}],[11,"next","","",8,{"inputs":[{"name":"sparsearrayviewiterator"}],"output":{"name":"option"}}],[11,"next","","",9,{"inputs":[{"name":"sparsearrayiterator"}],"output":{"name":"option"}}],[11,"get_rows","","",5,{"inputs":[{"name":"sparserowarray"},{"name":"vec"}],"output":{"name":"sparserowarray"}}],[0,"traits","rustlearn::array","Basic traits applying to all types of matrices.",null,null],[4,"MatrixOrder","rustlearn::array::traits","",null,null],[13,"RowMajor","","",10,null],[13,"ColumnMajor","","",10,null],[8,"IndexableMatrix","","Trait representing a shaped matrix whose entries can be accessed\nat will using their row and column position.",null,null],[10,"rows","","Return the number of rows of the matrix.",11,{"inputs":[{"name":"indexablematrix"}],"output":{"name":"usize"}}],[10,"cols","","Return the number of columns of the matrix.",11,{"inputs":[{"name":"indexablematrix"}],"output":{"name":"usize"}}],[10,"get_unchecked","","Get the value of the entry at (`row`, `column`) without bounds checking.",11,{"inputs":[{"name":"indexablematrix"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[10,"get_unchecked_mut","","Get a mutable reference to the value of the entry at (`row`, `column`)\nwithout bounds checking.",11,{"inputs":[{"name":"indexablematrix"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"get","","Get the value of the entry at (`row`, `column`).",11,{"inputs":[{"name":"indexablematrix"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"get_mut","","Get a mutable reference to value of the entry at (`row`, `column`).",11,{"inputs":[{"name":"indexablematrix"},{"name":"usize"},{"name":"usize"}],"output":{"name":"f32"}}],[11,"set","","Set the value of the entry at (`row`, `column`) to `value`.",11,{"inputs":[{"name":"indexablematrix"},{"name":"usize"},{"name":"usize"},{"name":"f32"}],"output":null}],[11,"set_unchecked","","Set the value of the entry at (`row`, `column`) to `value` without bounds checking.",11,{"inputs":[{"name":"indexablematrix"},{"name":"usize"},{"name":"usize"},{"name":"f32"}],"output":null}],[8,"RowIterable","","Trait representing a matrix that can be iterated over in\na row-wise fashion.",null,null],[16,"Item","","",12,null],[16,"Output","","",12,null],[10,"iter_rows","","Iterate over rows of the matrix.",12,{"inputs":[{"name":"rowiterable"}],"output":{"name":"output"}}],[10,"view_row","","View a row of the matrix.",12,{"inputs":[{"name":"rowiterable"},{"name":"usize"}],"output":{"name":"item"}}],[8,"ColumnIterable","","Trait representing a matrix that can be iterated over in\na column-wise fashion.",null,null],[16,"Item","","",13,null],[16,"Output","","",13,null],[10,"iter_columns","","Iterate over columns of a the matrix.",13,{"inputs":[{"name":"columniterable"}],"output":{"name":"output"}}],[10,"view_column","","View a column of the matrix.",13,{"inputs":[{"name":"columniterable"},{"name":"usize"}],"output":{"name":"item"}}],[8,"NonzeroIterable","","Trait representing an object whose non-zero\nentries can be iterated over.",null,null],[16,"Output","","",14,null],[10,"iter_nonzero","","",14,{"inputs":[{"name":"nonzeroiterable"}],"output":{"name":"output"}}],[8,"RowIndex","","Trait representing a matrix whose rows can be selected\nto create a new matrix containing those rows.",null,null],[16,"Output","","",15,null],[10,"get_rows","","",15,{"inputs":[{"name":"rowindex"},{"name":"rhs"}],"output":{"name":"output"}}],[8,"ElementwiseArrayOps","","Elementwise array operations trait.",null,null],[16,"Output","","",16,null],[10,"add","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":{"name":"output"}}],[10,"add_inplace","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":null}],[10,"sub","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":{"name":"output"}}],[10,"sub_inplace","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":null}],[10,"times","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":{"name":"output"}}],[10,"times_inplace","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":null}],[10,"div","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":{"name":"output"}}],[10,"div_inplace","","",16,{"inputs":[{"name":"elementwisearrayops"},{"name":"rhs"}],"output":null}],[8,"Dot","","A matrix multiplication trait.",null,null],[16,"Output","","",17,null],[10,"dot","","",17,{"inputs":[{"name":"dot"},{"name":"rhs"}],"output":{"name":"output"}}],[11,"decode","","",10,{"inputs":[{"name":"matrixorder"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"matrixorder"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"matrixorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"matrixorder"}],"output":{"name":"matrixorder"}}],[0,"prelude","rustlearn::array","Prelude containing basic matrix-like structures and traits.",null,null],[0,"cross_validation","rustlearn","Cross validation utilities.",null,null],[0,"cross_validation","rustlearn::cross_validation","K-fold cross validation.",null,null],[3,"CrossValidation","rustlearn::cross_validation::cross_validation","",null,null],[11,"new","","Create a new instance of the cross validation utility.",18,{"inputs":[{"name":"crossvalidation"},{"name":"usize"},{"name":"usize"}],"output":{"name":"crossvalidation"}}],[11,"set_rng","","Fix the random number generator.",18,{"inputs":[{"name":"crossvalidation"},{"name":"stdrng"}],"output":null}],[11,"next","","",18,{"inputs":[{"name":"crossvalidation"}],"output":{"name":"option"}}],[0,"shuffle_split","rustlearn::cross_validation","Validation via repeated random shuffling\nof the data and splitting into a training and test set.",null,null],[3,"ShuffleSplit","rustlearn::cross_validation::shuffle_split","",null,null],[11,"new","","Create a new instance of the shuffle split utility.",19,{"inputs":[{"name":"shufflesplit"},{"name":"usize"},{"name":"usize"},{"name":"f32"}],"output":{"name":"shufflesplit"}}],[11,"set_rng","","Set the random number generator.",19,{"inputs":[{"name":"shufflesplit"},{"name":"stdrng"}],"output":null}],[11,"next","","",19,{"inputs":[{"name":"shufflesplit"}],"output":{"name":"option"}}],[0,"datasets","rustlearn","Datasets and dataset loading utilities.",null,null],[0,"iris","rustlearn::datasets","The iris dataset.",null,null],[5,"load_data","rustlearn::datasets::iris","Load the iris dataset, returning a tuple of (features, class labels).",null,null],[0,"ensemble","rustlearn","Ensemble models.",null,null],[0,"random_forest","rustlearn::ensemble","Random forests.",null,null],[3,"Hyperparameters","rustlearn::ensemble::random_forest","",null,null],[3,"RandomForest","","",null,null],[11,"decode","","",20,{"inputs":[{"name":"hyperparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",20,{"inputs":[{"name":"hyperparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new instance of Hyperparameters, using the Hyperparameters\nfor a `DecisionTree` and the number of trees to build.",20,{"inputs":[{"name":"hyperparameters"},{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"rng","","Set the random number generator.",20,{"inputs":[{"name":"hyperparameters"},{"name":"stdrng"}],"output":{"name":"hyperparameters"}}],[11,"build","","Build the random forest model.",20,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"randomforest"}}],[11,"one_vs_rest","","Build a one-vs-rest multiclass random forest.",20,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"onevsrestwrapper"}}],[11,"decode","","",21,{"inputs":[{"name":"randomforest"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",21,{"inputs":[{"name":"randomforest"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"randomforest"}],"output":{"name":"randomforest"}}],[11,"fit","","",21,{"inputs":[{"name":"randomforest"},{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",21,{"inputs":[{"name":"randomforest"},{"name":"array"}],"output":{"name":"result"}}],[11,"fit","","",21,{"inputs":[{"name":"randomforest"},{"name":"sparserowarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",21,{"inputs":[{"name":"randomforest"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[11,"trees","","Return a reference to the consituent trees vector.",21,{"inputs":[{"name":"randomforest"}],"output":{"name":"vec"}}],[0,"linear_models","rustlearn","Linear models.",null,null],[0,"sgdclassifier","rustlearn::linear_models","A two-class logistic regression classifier implemented using stochastic gradient descent.",null,null],[3,"Hyperparameters","rustlearn::linear_models::sgdclassifier","Hyperparameters for a `SGDClassifier` model.",null,null],[3,"SGDClassifier","","A two-class linear regression classifier implemented using stochastic gradient descent.",null,null],[11,"decode","","",22,{"inputs":[{"name":"hyperparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",22,{"inputs":[{"name":"hyperparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Creates new Hyperparameters.",22,{"inputs":[{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"learning_rate","","Set the initial learning rate.",22,{"inputs":[{"name":"hyperparameters"},{"name":"f32"}],"output":{"name":"hyperparameters"}}],[11,"l2_penalty","","Set the L2 penalty.",22,{"inputs":[{"name":"hyperparameters"},{"name":"f32"}],"output":{"name":"hyperparameters"}}],[11,"l1_penalty","","Set the L1 penalty.",22,{"inputs":[{"name":"hyperparameters"},{"name":"f32"}],"output":{"name":"hyperparameters"}}],[11,"build","","Build a two-class model.",22,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"sgdclassifier"}}],[11,"one_vs_rest","","Build a one-vs-rest multiclass model.",22,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"onevsrestwrapper"}}],[11,"decode","","",23,{"inputs":[{"name":"sgdclassifier"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",23,{"inputs":[{"name":"sgdclassifier"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"sgdclassifier"}],"output":{"name":"sgdclassifier"}}],[11,"fit","","",23,{"inputs":[{"name":"sgdclassifier"},{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",23,{"inputs":[{"name":"sgdclassifier"},{"name":"array"}],"output":{"name":"result"}}],[11,"fit","","",23,{"inputs":[{"name":"sgdclassifier"},{"name":"sparserowarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",23,{"inputs":[{"name":"sgdclassifier"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[11,"get_coefficients","","Returns a reference to the estimated coefficients vector.",23,{"inputs":[{"name":"sgdclassifier"}],"output":{"name":"array"}}],[0,"metrics","rustlearn","Accuracy metrics.",null,null],[5,"roc_auc_score","rustlearn::metrics","Compute the ROC AUC score for a binary classification problem.",null,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[5,"accuracy_score","","Measure classifier accuracy",null,{"inputs":[{"name":"array"},{"name":"array"}],"output":{"name":"f32"}}],[0,"multiclass","rustlearn","Utilities for mutliclass classifiers.",null,null],[3,"OneVsRest","rustlearn::multiclass","",null,null],[3,"OneVsRestWrapper","","Wraps simple two-class classifiers to implement one-vs-rest strategies.",null,null],[11,"split","","",24,{"inputs":[{"name":"onevsrest"},{"name":"array"}],"output":{"name":"onevsrest"}}],[11,"merge","","",24,null],[11,"next","","",24,{"inputs":[{"name":"onevsrest"}],"output":{"name":"option"}}],[11,"decode","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"t"}],"output":{"name":"onevsrestwrapper"}}],[11,"models","","",25,{"inputs":[{"name":"onevsrestwrapper"}],"output":{"name":"vec"}}],[11,"class_labels","","",25,{"inputs":[{"name":"onevsrestwrapper"}],"output":{"name":"vec"}}],[11,"fit","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"array"}],"output":{"name":"result"}}],[11,"predict","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"array"}],"output":{"name":"result"}}],[11,"fit","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"sparserowarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[11,"predict","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[11,"fit","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"sparsecolumnarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"sparsecolumnarray"}],"output":{"name":"result"}}],[11,"predict","","",25,{"inputs":[{"name":"onevsrestwrapper"},{"name":"sparsecolumnarray"}],"output":{"name":"result"}}],[0,"feature_extraction","rustlearn","Feature extraction utilities.",null,null],[0,"dict_vectorizer","rustlearn::feature_extraction","`DictVectorizer` vectorizers a set of named features into a sparse array\nvia one-hot encoding.",null,null],[3,"DictVectorizer","rustlearn::feature_extraction::dict_vectorizer","",null,null],[11,"default","","",26,{"inputs":[{"name":"dictvectorizer"}],"output":{"name":"dictvectorizer"}}],[11,"decode","","",26,{"inputs":[{"name":"dictvectorizer"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",26,{"inputs":[{"name":"dictvectorizer"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new `DictVectorizer`.",26,{"inputs":[{"name":"dictvectorizer"}],"output":{"name":"dictvectorizer"}}],[11,"partial_fit","","Set the feature value of a named feature in a given row.",26,{"inputs":[{"name":"dictvectorizer"},{"name":"usize"},{"name":"str"},{"name":"f32"}],"output":null}],[11,"transform","","Transform the accumulated data into a sparse array.",26,{"inputs":[{"name":"dictvectorizer"}],"output":{"name":"sparserowarray"}}],[11,"dictionary","","Return a reference to the feature dictionary, mapping\nfeature names to their (column index, occurrence count).",26,{"inputs":[{"name":"dictvectorizer"}],"output":{"name":"hashmap"}}],[0,"factorization","rustlearn","Factorization models.",null,null],[0,"factorization_machines","rustlearn::factorization","A factorization machine model implemented using stochastic gradient descent.",null,null],[3,"Hyperparameters","rustlearn::factorization::factorization_machines","Hyperparameters for a FactorizationMachine",null,null],[3,"FactorizationMachine","","A two-class factorization machine implemented using stochastic gradient descent.",null,null],[11,"decode","","",27,{"inputs":[{"name":"hyperparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",27,{"inputs":[{"name":"hyperparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Creates new Hyperparameters.",27,{"inputs":[{"name":"hyperparameters"},{"name":"usize"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"learning_rate","","Set the initial learning rate.",27,{"inputs":[{"name":"hyperparameters"},{"name":"f32"}],"output":{"name":"hyperparameters"}}],[11,"l2_penalty","","Set the L2 penalty.",27,{"inputs":[{"name":"hyperparameters"},{"name":"f32"}],"output":{"name":"hyperparameters"}}],[11,"l1_penalty","","Set the L1 penalty.",27,{"inputs":[{"name":"hyperparameters"},{"name":"f32"}],"output":{"name":"hyperparameters"}}],[11,"rng","","",27,{"inputs":[{"name":"hyperparameters"},{"name":"stdrng"}],"output":{"name":"hyperparameters"}}],[11,"build","","Build a two-class model.",27,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"factorizationmachine"}}],[11,"one_vs_rest","","Build a one-vs-rest multiclass model.",27,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"onevsrestwrapper"}}],[11,"decode","","",28,{"inputs":[{"name":"factorizationmachine"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",28,{"inputs":[{"name":"factorizationmachine"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"factorizationmachine"}],"output":{"name":"factorizationmachine"}}],[11,"get_coefficients","","",28,{"inputs":[{"name":"factorizationmachine"}],"output":{"name":"array"}}],[11,"get_latent_factors","","",28,{"inputs":[{"name":"factorizationmachine"}],"output":{"name":"array"}}],[11,"fit","","",28,{"inputs":[{"name":"factorizationmachine"},{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",28,{"inputs":[{"name":"factorizationmachine"},{"name":"array"}],"output":{"name":"result"}}],[11,"fit","","",28,{"inputs":[{"name":"factorizationmachine"},{"name":"sparserowarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",28,{"inputs":[{"name":"factorizationmachine"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[0,"trees","rustlearn","Decision trees.",null,null],[0,"decision_tree","rustlearn::trees","A two-class decision tree classifer.",null,null],[3,"Hyperparameters","rustlearn::trees::decision_tree","Hyperparameters for a `DecisionTree` model.",null,null],[3,"DecisionTree","","A two-class decision tree.",null,null],[11,"decode","","",29,{"inputs":[{"name":"hyperparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",29,{"inputs":[{"name":"hyperparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"hyperparameters"}}],[11,"new","","Creates new Hyperparameters",29,{"inputs":[{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"max_features","","Set the maximum number of features to be considered when\nfinding the best split for the decision tree.",29,{"inputs":[{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"min_samples_split","","Set the minimum number of samples that must be present\nin order for further splitting to take place.",29,{"inputs":[{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"max_depth","","Set the maximum depth of the tree.",29,{"inputs":[{"name":"hyperparameters"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"rng","","Set the random number generator used for sampling features\nto consider at each split.",29,{"inputs":[{"name":"hyperparameters"},{"name":"stdrng"}],"output":{"name":"hyperparameters"}}],[11,"build","","Build a binary decision tree model.",29,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"decisiontree"}}],[11,"one_vs_rest","","Build a one-vs-rest multi-class decision tree model.",29,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"onevsrestwrapper"}}],[11,"decode","","",30,{"inputs":[{"name":"decisiontree"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",30,{"inputs":[{"name":"decisiontree"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"decisiontree"}],"output":{"name":"decisiontree"}}],[11,"fit","","",30,{"inputs":[{"name":"decisiontree"},{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",30,{"inputs":[{"name":"decisiontree"},{"name":"array"}],"output":{"name":"result"}}],[11,"fit","","",30,{"inputs":[{"name":"decisiontree"},{"name":"sparsecolumnarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",30,{"inputs":[{"name":"decisiontree"},{"name":"sparsecolumnarray"}],"output":{"name":"result"}}],[0,"traits","rustlearn","Common rustlearn traits.",null,null],[8,"SupervisedModel","rustlearn::traits","",null,null],[10,"fit","","",31,{"inputs":[{"name":"supervisedmodel"},{"name":"t"},{"name":"array"}],"output":{"name":"result"}}],[10,"decision_function","","",31,{"inputs":[{"name":"supervisedmodel"},{"name":"t"}],"output":{"name":"result"}}],[11,"predict","","",31,{"inputs":[{"name":"supervisedmodel"},{"name":"t"}],"output":{"name":"result"}}],[0,"svm","rustlearn","Support vector machines.",null,null],[0,"libsvm","rustlearn::svm","Models provided by the `libsvm` library.",null,null],[0,"svc","rustlearn::svm::libsvm","Support Vector Classifier using the `libsvm` library.",null,null],[3,"Hyperparameters","rustlearn::svm::libsvm::svc","Hyperparameters for the SVC model.",null,null],[3,"SVC","","Support Vector Classifier provided by the `libsvm` library.",null,null],[4,"KernelType","","Type of the kernel used by the SVM.",null,null],[13,"Linear","","",32,null],[13,"Polynomial","","",32,null],[13,"RBF","","",32,null],[13,"Sigmoid","","",32,null],[13,"Precomputed","","Not implemented.",32,null],[11,"clone","","",33,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"hyperparameters"}}],[11,"decode","","",33,{"inputs":[{"name":"hyperparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",33,{"inputs":[{"name":"hyperparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","",33,{"inputs":[{"name":"hyperparameters"},{"name":"usize"},{"name":"kerneltype"},{"name":"usize"}],"output":{"name":"hyperparameters"}}],[11,"C","","Set the regularization parameter `C`; smaller values\nmean more regularization.\nDefault is `1.0`.",33,{"inputs":[{"name":"hyperparameters"},{"name":"f64"}],"output":{"name":"hyperparameters"}}],[11,"degree","","Set the degree of the polynomial kernel. No effect on other\nkernels. Default: 3.",33,{"inputs":[{"name":"hyperparameters"},{"name":"i32"}],"output":{"name":"hyperparameters"}}],[11,"gamma","","Set the gamma parameter of the RBF kernel.\nDefault is `1 / self.dim`.",33,{"inputs":[{"name":"hyperparameters"},{"name":"f64"}],"output":{"name":"hyperparameters"}}],[11,"coef0","","Set the coef0 parameter for the sigmoid kernel.\nDefault is `0.0`.",33,{"inputs":[{"name":"hyperparameters"},{"name":"f64"}],"output":{"name":"hyperparameters"}}],[11,"cache_size","","Set the `libsvm` cache size, in megabytes.\nDefault is `100.0`.",33,{"inputs":[{"name":"hyperparameters"},{"name":"f64"}],"output":{"name":"hyperparameters"}}],[11,"build","","Build the SVC model. `libsvm` natively supports multiclass\nproblems via one-vs-one (OvO) estimation, so no one-vs-rest\nwrapper is provided.",33,{"inputs":[{"name":"hyperparameters"}],"output":{"name":"svc"}}],[11,"clone","","",34,{"inputs":[{"name":"svc"}],"output":{"name":"svc"}}],[11,"decode","","",34,{"inputs":[{"name":"svc"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",34,{"inputs":[{"name":"svc"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fit","","",34,{"inputs":[{"name":"svc"},{"name":"array"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",34,{"inputs":[{"name":"svc"},{"name":"array"}],"output":{"name":"result"}}],[11,"predict","","",34,{"inputs":[{"name":"svc"},{"name":"array"}],"output":{"name":"result"}}],[11,"fit","","",34,{"inputs":[{"name":"svc"},{"name":"sparserowarray"},{"name":"array"}],"output":{"name":"result"}}],[11,"decision_function","","",34,{"inputs":[{"name":"svc"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[11,"predict","","",34,{"inputs":[{"name":"svc"},{"name":"sparserowarray"}],"output":{"name":"result"}}],[0,"utils","rustlearn","Internal utils.",null,null],[3,"EncodableRng","rustlearn::utils","Wrapper for making random number generators serializable.\nDoes no actual encoding, and merely creates a new\ngenerator on decoding.",null,null],[12,"rng","","",35,null],[5,"check_valid_labels","","Check that the input array contains valid binary classification labels.",null,{"inputs":[{"name":"array"}],"output":{"name":"result"}}],[5,"check_data_dimensionality","","Check compatibility of the model dimensions and the number of columns in X.",null,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"result"}}],[5,"check_matched_dimensions","","",null,{"inputs":[{"name":"t"},{"name":"array"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"encodablerng"}],"output":{"name":"encodablerng"}}],[11,"new","","",35,{"inputs":[{"name":"encodablerng"}],"output":{"name":"encodablerng"}}],[11,"default","","",35,{"inputs":[{"name":"encodablerng"}],"output":{"name":"self"}}],[11,"encode","","",35,{"inputs":[{"name":"encodablerng"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",35,{"inputs":[{"name":"encodablerng"},{"name":"d"}],"output":{"name":"result"}}],[0,"prelude","rustlearn","Basic data structures and traits used throughout `rustlearn`.",null,null],[11,"fmt","rustlearn::svm::libsvm::svc","",32,{"inputs":[{"name":"kerneltype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"kerneltype"}],"output":{"name":"kerneltype"}}],[11,"decode","","",32,{"inputs":[{"name":"kerneltype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",32,{"inputs":[{"name":"kerneltype"},{"name":"__s"}],"output":{"name":"result"}}]],"paths":[[3,"Array"],[3,"ArrayView"],[3,"ArrayIterator"],[3,"ArrayViewIterator"],[3,"ArrayViewNonzeroIterator"],[3,"SparseRowArray"],[3,"SparseColumnArray"],[3,"SparseArrayView"],[3,"SparseArrayViewIterator"],[3,"SparseArrayIterator"],[4,"MatrixOrder"],[8,"IndexableMatrix"],[8,"RowIterable"],[8,"ColumnIterable"],[8,"NonzeroIterable"],[8,"RowIndex"],[8,"ElementwiseArrayOps"],[8,"Dot"],[3,"CrossValidation"],[3,"ShuffleSplit"],[3,"Hyperparameters"],[3,"RandomForest"],[3,"Hyperparameters"],[3,"SGDClassifier"],[3,"OneVsRest"],[3,"OneVsRestWrapper"],[3,"DictVectorizer"],[3,"Hyperparameters"],[3,"FactorizationMachine"],[3,"Hyperparameters"],[3,"DecisionTree"],[8,"SupervisedModel"],[4,"KernelType"],[3,"Hyperparameters"],[3,"SVC"],[3,"EncodableRng"]]};
initSearch(searchIndex);
